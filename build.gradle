ext {
	springBootVersion = '2.0.4.RELEASE'
	log4jVersion = '2.10.0'
	slf4jVersion = '1.7.25'
	junitVersion = '4.12'
}

buildscript {
	repositories {
		maven { url 'http://repo.spring.io/plugins-release' }
		maven { url "https://plugins.gradle.org/m2/" }
		mavenCentral()
	}

	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:2.0.4.RELEASE"
	}
}

subprojects { p ->
	group 'com.file.loader'
	version '1.0.0'

	apply plugin: 'idea'
	apply plugin: 'java'

	compileJava {
		sourceCompatibility = JavaVersion.VERSION_1_8
		targetCompatibility = JavaVersion.VERSION_1_8
		options.encoding = 'UTF-8'
	}

	compileTestJava {
		sourceCompatibility = JavaVersion.VERSION_1_8
		targetCompatibility = JavaVersion.VERSION_1_8
		options.encoding = 'UTF-8'
		options.compilerArgs += "-parameters"
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		compile group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
		compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: "${slf4jVersion}"
		compile group: 'org.slf4j', name: 'jul-to-slf4j', version: "${slf4jVersion}"

		testCompile group: 'junit', name: 'junit', version: "${junitVersion}"
	}

	test { t ->
		useJUnit()
	}
}

project(":core") {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'war'
	apply plugin: 'groovy'

	ext {
		springDataVersion = '2.0.4.RELEASE'
		spockframeworkVersion = '1.1-groovy-2.4'
		codehausGroovyVersion = '2.4.15'
		commonsLangVersion = '3.5'
	}

	dependencies {

		compile group: 'org.apache.commons', name: 'commons-lang3', version: "${commonsLangVersion}"

		// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb
		compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: "${springBootVersion}"

		compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "${springBootVersion}"

		testCompile group: 'org.spockframework', name: 'spock-core', version: "${spockframeworkVersion}"
		testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: "${codehausGroovyVersion}"
	}

	test {
		testLogging {
			events 'failed'
			exceptionFormat = 'full'
			afterSuite { desc, result ->
				if (!desc.parent) {
					logger.lifecycle("\nUnit Tests Result: ${result.resultType} \nTests run: ${result.testCount}, Successes: ${result.successfulTestCount}, Failures: ${result.failedTestCount}, Skipped: ${result.skippedTestCount}\n")
				}
			}
		}
	}

	bootWar {
		baseName = "picture-loader"
	}

	springBoot {
		mainClassName = 'com.file.loader.ApplicationLauncher'
	}

	bootRun {
		// support passing -Dsystem.property=value to bootRun task
		systemProperties = System.properties as Map<String, ?>
	}

	bootJar {
		enabled = false
	}

	jar {
		enabled = true
	}
}

project(":integration-test") {
	ext {
		cucumberVersion = '1.2.5'
		httpClientVersion = '4.5.6'
	}

	dependencies {
		testCompile project(":core")

		testCompile group: 'org.apache.httpcomponents', name: 'httpclient', version: "${httpClientVersion}"
		testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "${springBootVersion}"
		testCompile group: 'info.cukes', name: 'cucumber-core', version: "${cucumberVersion}"
		testCompile group: 'info.cukes', name: 'cucumber-junit', version: "${cucumberVersion}"
		testCompile group: 'info.cukes', name: 'cucumber-java', version: "${cucumberVersion}"
		testCompile group: 'info.cukes', name: 'cucumber-spring', version: "${cucumberVersion}"
	}

	test { t ->
		testLogging {
			events 'failed'
			exceptionFormat = 'full'
			afterSuite { desc, result ->
				if (!desc.parent) {
					logger.lifecycle("\nIntegration Tests Result: ${result.resultType} \nTests run: ${result.testCount}, Successes: ${result.successfulTestCount}, Failures: ${result.failedTestCount}, Skipped: ${result.skippedTestCount}\n")
				}
			}
		}
	}
}

task wrapper(type: Wrapper) {
	description = "Generates gradlew[.bat] scripts"
	gradleVersion = "4.9"
}
